{"version":3,"file":"index.js","sourceRoot":"","sources":["index.ts"],"names":[],"mappings":";;AACA,0CAA0C;AAS1C,SAAwB,SAAS,CAA+B,eAAuB;IACrF,IAAI,EAAE,kBAAkB,EAAE,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;IAC/C,IAAI;QACF,OAAO,IAAA,cAAO,EAAC,eAAe,EAAE,EAAE,QAAQ,EAAE,IAAI,CAAC,YAAY,EAAE,kBAAkB,EAAE,CAAC,CAAC;KACtF;IAAC,OAAO,KAAK,EAAE;QACd,KAAK,CAAC,IAAI,GAAG,yBAAyB,CAAC;QACvC,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC;QAC/B,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;QACtB,OAAO,EAAE,CAAC;KACX;AACH,CAAC;AAVD,4BAUC","sourcesContent":["import type { LoaderContext } from 'webpack';\nimport { hbsToJS } from '@embroider/core';\n\nexport interface Options {\n  compatModuleNaming?: {\n    rootDir: string;\n    modulePrefix: string;\n  };\n}\n\nexport default function hbsLoader(this: LoaderContext<Options>, templateContent: string) {\n  let { compatModuleNaming } = this.getOptions();\n  try {\n    return hbsToJS(templateContent, { filename: this.resourcePath, compatModuleNaming });\n  } catch (error) {\n    error.type = 'Template Compiler Error';\n    error.file = this.resourcePath;\n    this.emitError(error);\n    return '';\n  }\n}\n"]}