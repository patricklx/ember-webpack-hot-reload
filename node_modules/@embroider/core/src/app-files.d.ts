import type { Package, AddonPackage } from '@embroider/shared-internals';
export interface RouteFiles {
    route?: string;
    template?: string;
    controller?: string;
    children: Map<string, RouteFiles>;
}
export declare class AppFiles {
    readonly engine: Engine;
    readonly tests: ReadonlyArray<string>;
    readonly components: ReadonlyArray<string>;
    readonly helpers: ReadonlyArray<string>;
    readonly modifiers: ReadonlyArray<string>;
    private perRoute;
    readonly otherAppFiles: ReadonlyArray<string>;
    readonly isFastbootOnly: Map<string, boolean>;
    readonly fastbootFiles: {
        [appName: string]: {
            localFilename: string;
            shadowedFilename: string | undefined;
        };
    };
    constructor(engine: Engine, appFiles: Set<string>, fastbootFiles: Set<string>, resolvableExtensions: RegExp, podModulePrefix?: string);
    private handleClassicRouteFile;
    private handlePodsRouteFile;
    get routeFiles(): Readonly<RouteFiles>;
}
export interface Engine {
    package: Package;
    addons: Set<AddonPackage>;
    parent: Engine | undefined;
    sourcePath: string;
    modulePrefix: string;
    appRelativePath: string;
}
