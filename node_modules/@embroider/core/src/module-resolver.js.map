{"version":3,"file":"module-resolver.js","sourceRoot":"","sources":["module-resolver.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  emberVirtualPackages,\n  emberVirtualPeerDeps,\n  extensionsPattern,\n  packageName as getPackageName,\n  packageName,\n} from '@embroider/shared-internals';\nimport { dirname, resolve } from 'path';\nimport type { Package, V2Package } from '@embroider/shared-internals';\nimport { explicitRelative, RewrittenPackageCache } from '@embroider/shared-internals';\nimport makeDebug from 'debug';\nimport assertNever from 'assert-never';\nimport resolveModule from 'resolve';\nimport {\n  virtualExternalESModule,\n  virtualExternalCJSModule,\n  virtualPairComponent,\n  virtualContent,\n  fastbootSwitch,\n  decodeFastbootSwitch,\n  decodeImplicitModules,\n} from './virtual-content';\nimport { Memoize } from 'typescript-memoize';\nimport { describeExports } from './describe-exports';\nimport { readFileSync } from 'fs';\nimport type UserOptions from './options';\n\nconst debug = makeDebug('embroider:resolver');\nfunction logTransition<R extends ModuleRequest>(reason: string, before: R, after: R = before): R {\n  if (after.isVirtual) {\n    debug(`virtualized %s in %s because %s`, before.specifier, before.fromFile, reason);\n  } else if (before.specifier !== after.specifier) {\n    if (before.fromFile !== after.fromFile) {\n      debug(\n        `aliased and rehomed: %s to %s, from %s to %s because %s`,\n        before.specifier,\n        after.specifier,\n        before.fromFile,\n        after.fromFile,\n        reason\n      );\n    } else {\n      debug(`aliased: %s to %s in %s because`, before.specifier, after.specifier, before.fromFile, reason);\n    }\n  } else if (before.fromFile !== after.fromFile) {\n    debug(`rehomed: %s from %s to %s because`, before.specifier, before.fromFile, after.fromFile, reason);\n  } else {\n    debug(`unchanged: %s in %s because %s`, before.specifier, before.fromFile, reason);\n  }\n  return after;\n}\n\nexport interface Options {\n  renamePackages: {\n    [fromName: string]: string;\n  };\n  renameModules: {\n    [fromName: string]: string;\n  };\n  activeAddons: {\n    [packageName: string]: string;\n  };\n  resolvableExtensions: string[];\n  appRoot: string;\n  engines: EngineConfig[];\n  modulePrefix: string;\n  podModulePrefix?: string;\n  amdCompatibility: Required<UserOptions['amdCompatibility']>;\n}\n\ninterface EngineConfig {\n  packageName: string;\n  activeAddons: { name: string; root: string }[];\n  fastbootFiles: { [appName: string]: { localFilename: string; shadowedFilename: string | undefined } };\n  root: string;\n}\n\ntype MergeEntry =\n  | {\n      type: 'app-only';\n      'app-js': {\n        localPath: string;\n        packageRoot: string;\n        fromPackageName: string;\n      };\n    }\n  | {\n      type: 'fastboot-only';\n      'fastboot-js': {\n        localPath: string;\n        packageRoot: string;\n        fromPackageName: string;\n      };\n    }\n  | {\n      type: 'both';\n      'app-js': {\n        localPath: string;\n        packageRoot: string;\n        fromPackageName: string;\n      };\n      'fastboot-js': {\n        localPath: string;\n        packageRoot: string;\n        fromPackageName: string;\n      };\n    };\n\ntype MergeMap = Map</* engine root dir */ string, Map</* withinEngineModuleName */ string, MergeEntry>>;\n\nconst compatPattern = /#embroider_compat\\/(?<type>[^\\/]+)\\/(?<rest>.*)/;\n\nexport interface ModuleRequest {\n  readonly specifier: string;\n  readonly fromFile: string;\n  readonly isVirtual: boolean;\n  readonly meta: Record<string, unknown> | undefined;\n  alias(newSpecifier: string): this;\n  rehome(newFromFile: string): this;\n  virtualize(virtualFilename: string): this;\n  withMeta(meta: Record<string, any> | undefined): this;\n}\n\nclass NodeModuleRequest implements ModuleRequest {\n  constructor(\n    readonly specifier: string,\n    readonly fromFile: string,\n    readonly isVirtual: boolean,\n    readonly meta: Record<string, any> | undefined\n  ) {}\n  alias(specifier: string): this {\n    return new NodeModuleRequest(specifier, this.fromFile, false, this.meta) as this;\n  }\n  rehome(fromFile: string): this {\n    if (this.fromFile === fromFile) {\n      return this;\n    } else {\n      return new NodeModuleRequest(this.specifier, fromFile, false, this.meta) as this;\n    }\n  }\n  virtualize(filename: string): this {\n    return new NodeModuleRequest(filename, this.fromFile, true, this.meta) as this;\n  }\n  withMeta(meta: Record<string, any> | undefined): this {\n    return new NodeModuleRequest(this.specifier, this.fromFile, this.isVirtual, meta) as this;\n  }\n}\n\n// This is generic because different build systems have different ways of\n// representing a found module, and we just pass those values through.\nexport type Resolution<T = unknown, E = unknown> = { type: 'found'; result: T } | { type: 'not_found'; err: E };\n\nexport type ResolverFunction<R extends ModuleRequest = ModuleRequest, Res extends Resolution = Resolution> = (\n  request: R\n) => Promise<Res>;\n\nexport type SyncResolverFunction<R extends ModuleRequest = ModuleRequest, Res extends Resolution = Resolution> = (\n  request: R\n) => Res;\n\nexport class Resolver {\n  constructor(readonly options: Options) {}\n\n  beforeResolve<R extends ModuleRequest>(request: R): R {\n    if (request.specifier === '@embroider/macros') {\n      // the macros package is always handled directly within babel (not\n      // necessarily as a real resolvable package), so we should not mess with it.\n      // It might not get compiled away until *after* our plugin has run, which is\n      // why we need to know about it.\n      return logTransition('early exit', request);\n    }\n\n    request = this.handleFastbootSwitch(request);\n    request = this.handleGlobalsCompat(request);\n    request = this.handleImplicitModules(request);\n    request = this.handleRenaming(request);\n    // we expect the specifier to be app relative at this point - must be after handleRenaming\n    request = this.generateFastbootSwitch(request);\n    request = this.preHandleExternal(request);\n\n    // this should probably stay the last step in beforeResolve, because it can\n    // rehome requests to their un-rewritten locations, and for the most part we\n    // want to be dealing with the rewritten packages.\n    request = this.handleRewrittenPackages(request);\n    return request;\n  }\n\n  // This encapsulates the whole resolving process. Given a `defaultResolve`\n  // that calls your build system's normal module resolver, this does both pre-\n  // and post-resolution adjustments as needed to implement our compatibility\n  // rules.\n  //\n  // Depending on the plugin architecture you're working in, it may be easier to\n  // call beforeResolve and fallbackResolve directly, in which case matching the\n  // details of the recursion to what this method does are your responsibility.\n  async resolve<Req extends ModuleRequest, Res extends Resolution>(\n    request: Req,\n    defaultResolve: ResolverFunction<Req, Res>\n  ): Promise<Res> {\n    let gen = this.internalResolve<Req, Res, Promise<Res>>(request, defaultResolve);\n    let out = gen.next();\n    while (!out.done) {\n      out = gen.next(await out.value);\n    }\n    return out.value;\n  }\n\n  // synchronous alternative to resolve() above. Because our own internals are\n  // all synchronous, you can use this if your defaultResolve function is\n  // synchronous.\n  resolveSync<Req extends ModuleRequest, Res extends Resolution>(\n    request: Req,\n    defaultResolve: SyncResolverFunction<Req, Res>\n  ): Res {\n    let gen = this.internalResolve<Req, Res, Res>(request, defaultResolve);\n    let out = gen.next();\n    while (!out.done) {\n      out = gen.next(out.value);\n    }\n    return out.value;\n  }\n\n  // Our core implementation is a generator so it can power both resolve() and\n  // resolveSync()\n  private *internalResolve<Req extends ModuleRequest, Res extends Resolution, Yielded>(\n    request: Req,\n    defaultResolve: (req: Req) => Yielded\n  ): Generator<Yielded, Res, Res> {\n    request = this.beforeResolve(request);\n    let resolution = yield defaultResolve(request);\n\n    switch (resolution.type) {\n      case 'found':\n        return resolution;\n      case 'not_found':\n        break;\n      default:\n        throw assertNever(resolution);\n    }\n    let nextRequest = this.fallbackResolve(request);\n    if (nextRequest === request) {\n      // no additional fallback is available.\n      return resolution;\n    }\n    if (nextRequest.isVirtual) {\n      // virtual requests are terminal, there is no more beforeResolve or\n      // fallbackResolve around them. The defaultResolve is expected to know how\n      // to implement them.\n      return yield defaultResolve(nextRequest);\n    }\n    return yield* this.internalResolve(nextRequest, defaultResolve);\n  }\n\n  // Use standard NodeJS resolving, with our required compatibility rules on\n  // top. This is a convenience method for calling resolveSync with the\n  // defaultResolve already configured to be \"do the normal node thing\".\n  nodeResolve(\n    specifier: string,\n    fromFile: string\n  ):\n    | { type: 'virtual'; filename: string; content: string }\n    | { type: 'real'; filename: string }\n    | { type: 'not_found'; err: Error } {\n    let resolution = this.resolveSync(new NodeModuleRequest(specifier, fromFile, false, undefined), request => {\n      if (request.isVirtual) {\n        return {\n          type: 'found',\n          result: {\n            type: 'virtual' as 'virtual',\n            content: virtualContent(request.specifier, this),\n            filename: request.specifier,\n          },\n        };\n      }\n      try {\n        let filename = resolveModule.sync(request.specifier, {\n          basedir: dirname(request.fromFile),\n          extensions: this.options.resolvableExtensions,\n        });\n        return { type: 'found', result: { type: 'real' as 'real', filename } };\n      } catch (err) {\n        if (err.code !== 'MODULE_NOT_FOUND') {\n          throw err;\n        }\n        return { type: 'not_found', err };\n      }\n    });\n    switch (resolution.type) {\n      case 'not_found':\n        return resolution;\n      case 'found':\n        return resolution.result;\n      default:\n        throw assertNever(resolution);\n    }\n  }\n\n  get packageCache() {\n    return RewrittenPackageCache.shared('embroider', this.options.appRoot);\n  }\n\n  private logicalPackage(owningPackage: V2Package, file: string): V2Package {\n    let logicalLocation = this.reverseSearchAppTree(owningPackage, file);\n    if (logicalLocation) {\n      let pkg = this.packageCache.get(logicalLocation.owningEngine.root);\n      if (!pkg.isV2Ember()) {\n        throw new Error(`bug: all engines should be v2 addons by the time we see them here`);\n      }\n      return pkg;\n    }\n    return owningPackage;\n  }\n\n  private generateFastbootSwitch<R extends ModuleRequest>(request: R): R {\n    let pkg = this.packageCache.ownerOfFile(request.fromFile);\n\n    if (!pkg) {\n      return request;\n    }\n\n    if (packageName(request.specifier)) {\n      // not a relative request, and we're assuming all within-engine requests\n      // are relative by this point due to `v1 self-import` which happens\n      // earlier\n      return request;\n    }\n\n    let engineConfig = this.engineConfig(pkg.name);\n    let appRelativePath = explicitRelative(pkg.root, resolve(dirname(request.fromFile), request.specifier));\n    if (engineConfig) {\n      for (let candidate of this.withResolvableExtensions(appRelativePath)) {\n        let fastbootFile = engineConfig.fastbootFiles[candidate];\n        if (fastbootFile) {\n          if (fastbootFile.shadowedFilename) {\n            let { names } = describeExports(readFileSync(resolve(pkg.root, fastbootFile.shadowedFilename), 'utf8'), {});\n            let switchFile = fastbootSwitch(candidate, resolve(pkg.root, 'package.json'), names);\n            if (switchFile === request.fromFile) {\n              return logTransition('internal lookup from fastbootSwitch', request);\n            } else {\n              return logTransition('shadowed app fastboot', request, request.virtualize(switchFile));\n            }\n          } else {\n            return logTransition(\n              'unshadowed app fastboot',\n              request,\n              request.alias(fastbootFile.localFilename).rehome(resolve(pkg.root, 'package.json'))\n            );\n          }\n        }\n      }\n    }\n\n    return request;\n  }\n\n  private handleFastbootSwitch<R extends ModuleRequest>(request: R): R {\n    let match = decodeFastbootSwitch(request.fromFile);\n    if (!match) {\n      return request;\n    }\n\n    let section: 'app-js' | 'fastboot-js' | undefined;\n    if (request.specifier === './browser') {\n      section = 'app-js';\n    } else if (request.specifier === './fastboot') {\n      section = 'fastboot-js';\n    }\n\n    if (!section) {\n      return logTransition('non-special import in fastboot switch', request);\n    }\n\n    let pkg = this.packageCache.ownerOfFile(match.filename);\n    if (pkg) {\n      let rel = explicitRelative(pkg.root, match.filename);\n\n      let engineConfig = this.engineConfig(pkg.name);\n      if (engineConfig) {\n        let fastbootFile = engineConfig.fastbootFiles[rel];\n        if (fastbootFile && fastbootFile.shadowedFilename) {\n          let targetFile: string;\n          if (section === 'app-js') {\n            targetFile = fastbootFile.shadowedFilename;\n          } else {\n            targetFile = fastbootFile.localFilename;\n          }\n          return logTransition(\n            'matched app entry',\n            request,\n            // deliberately not using rehome because we want\n            // generateFastbootSwitch to see that this request is coming *from*\n            // a fastboot switch so it won't cycle back around. Instead we make\n            // the targetFile relative to the fromFile that we already have.\n            request.alias(explicitRelative(dirname(request.fromFile), resolve(pkg.root, targetFile)))\n          );\n        }\n      }\n\n      let entry = this.getEntryFromMergeMap(rel, pkg.root)?.entry;\n      if (entry?.type === 'both') {\n        return logTransition(\n          'matched addon entry',\n          request,\n          request.alias(entry[section].localPath).rehome(resolve(entry[section].packageRoot, 'package.json'))\n        );\n      }\n    }\n\n    return logTransition('failed to match in fastboot switch', request);\n  }\n\n  private handleImplicitModules<R extends ModuleRequest>(request: R): R {\n    let im = decodeImplicitModules(request.specifier);\n    if (!im) {\n      return request;\n    }\n\n    let pkg = this.packageCache.ownerOfFile(request.fromFile);\n    if (!pkg?.isV2Ember()) {\n      throw new Error(`bug: found implicit modules import in non-ember package at ${request.fromFile}`);\n    }\n\n    let packageName = getPackageName(im.fromFile);\n    if (packageName) {\n      let dep = this.packageCache.resolve(packageName, pkg);\n      return logTransition(\n        `dep's implicit modules`,\n        request,\n        request.virtualize(resolve(dep.root, `-embroider-${im.type}.js`))\n      );\n    } else {\n      return logTransition(\n        `own implicit modules`,\n        request,\n        request.virtualize(resolve(pkg.root, `-embroider-${im.type}.js`))\n      );\n    }\n  }\n\n  private handleGlobalsCompat<R extends ModuleRequest>(request: R): R {\n    let match = compatPattern.exec(request.specifier);\n    if (!match) {\n      return request;\n    }\n    let { type, rest } = match.groups!;\n    let fromPkg = this.packageCache.ownerOfFile(request.fromFile);\n    if (!fromPkg?.isV2Ember()) {\n      return request;\n    }\n    let engine = this.owningEngine(fromPkg);\n\n    switch (type) {\n      case 'helpers':\n        return this.resolveHelper(rest, engine, request);\n      case 'components':\n        return this.resolveComponent(rest, engine, request);\n      case 'modifiers':\n        return this.resolveModifier(rest, engine, request);\n      case 'ambiguous':\n        return this.resolveHelperOrComponent(rest, engine, request);\n      default:\n        throw new Error(`bug: unexepected #embroider_compat specifier: ${request.specifier}`);\n    }\n  }\n\n  private resolveHelper<R extends ModuleRequest>(path: string, inEngine: EngineConfig, request: R): R {\n    let target = this.parseGlobalPath(path, inEngine);\n    return logTransition(\n      'resolveHelper',\n      request,\n      request.alias(`${target.packageName}/helpers/${target.memberName}`).rehome(resolve(inEngine.root, 'package.json'))\n    );\n  }\n\n  private resolveComponent<R extends ModuleRequest>(path: string, inEngine: EngineConfig, request: R): R {\n    let target = this.parseGlobalPath(path, inEngine);\n\n    let hbsModule: string | null = null;\n    let jsModule: string | null = null;\n\n    // first, the various places our template might be.\n    for (let candidate of this.componentTemplateCandidates(target.packageName)) {\n      let resolution = this.nodeResolve(\n        `${target.packageName}${candidate.prefix}${target.memberName}${candidate.suffix}`,\n        target.from\n      );\n      if (resolution.type === 'real') {\n        hbsModule = resolution.filename;\n        break;\n      }\n    }\n\n    // then the various places our javascript might be.\n    for (let candidate of this.componentJSCandidates(target.packageName)) {\n      let resolution = this.nodeResolve(\n        `${target.packageName}${candidate.prefix}${target.memberName}${candidate.suffix}`,\n        target.from\n      );\n      // .hbs is a resolvable extension for us, so we need to exclude it here.\n      // It matches as a priority lower than .js, so finding an .hbs means\n      // there's definitely not a .js.\n      if (resolution.type === 'real' && !resolution.filename.endsWith('.hbs')) {\n        jsModule = resolution.filename;\n        break;\n      }\n    }\n\n    if (hbsModule) {\n      return logTransition(\n        `resolveComponent found legacy HBS`,\n        request,\n        request.virtualize(virtualPairComponent(hbsModule, jsModule))\n      );\n    } else if (jsModule) {\n      return logTransition(`resolveComponent found only JS`, request, request.alias(jsModule).rehome(target.from));\n    } else {\n      return logTransition(`resolveComponent failed`, request);\n    }\n  }\n\n  private resolveHelperOrComponent<R extends ModuleRequest>(path: string, inEngine: EngineConfig, request: R): R {\n    // resolveHelper just rewrites our request to one that should target the\n    // component, so here to resolve the ambiguity we need to actually resolve\n    // that candidate to see if it works.\n    let helperCandidate = this.resolveHelper(path, inEngine, request);\n    let helperMatch = this.nodeResolve(helperCandidate.specifier, helperCandidate.fromFile);\n    if (helperMatch.type === 'real') {\n      return logTransition('ambiguous case matched a helper', request, helperCandidate);\n    }\n\n    // unlike resolveHelper, resolveComponent already does pre-resolution in\n    // order to deal with its own internal ambiguity around JS vs HBS vs\n    // colocation.≥\n    let componentMatch = this.resolveComponent(path, inEngine, request);\n    if (componentMatch !== request) {\n      return logTransition('ambiguous case matched a cmoponent', request, componentMatch);\n    }\n\n    // this is the hard failure case -- we were supposed to find something and\n    // didn't. Let the normal resolution process progress so the user gets a\n    // normal build error.\n    return logTransition('ambiguous case failing', request);\n  }\n\n  private resolveModifier<R extends ModuleRequest>(path: string, inEngine: EngineConfig, request: R): R {\n    let target = this.parseGlobalPath(path, inEngine);\n    return logTransition(\n      'resolveModifier',\n      request,\n      request\n        .alias(`${target.packageName}/modifiers/${target.memberName}`)\n        .rehome(resolve(inEngine.root, 'package.json'))\n    );\n  }\n\n  private *componentTemplateCandidates(inPackageName: string) {\n    yield { prefix: '/templates/components/', suffix: '' };\n    yield { prefix: '/components/', suffix: '/template' };\n\n    let pods = this.podPrefix(inPackageName);\n    if (pods) {\n      yield { prefix: `${pods}/components/`, suffix: '/template' };\n    }\n  }\n\n  private *componentJSCandidates(inPackageName: string) {\n    yield { prefix: '/components/', suffix: '' };\n    yield { prefix: '/components/', suffix: '/component' };\n\n    let pods = this.podPrefix(inPackageName);\n    if (pods) {\n      yield { prefix: `${pods}/components/`, suffix: '/component' };\n    }\n  }\n\n  private podPrefix(targetPackageName: string) {\n    if (targetPackageName === this.options.modulePrefix && this.options.podModulePrefix) {\n      if (!this.options.podModulePrefix.startsWith(this.options.modulePrefix)) {\n        throw new Error(\n          `Your podModulePrefix (${this.options.podModulePrefix}) does not start with your app module prefix (${this.options.modulePrefix}). Not gonna support that silliness.`\n        );\n      }\n      return this.options.podModulePrefix.slice(this.options.modulePrefix.length);\n    }\n  }\n\n  // for paths that come from non-strict templates\n  private parseGlobalPath(path: string, inEngine: EngineConfig) {\n    let parts = path.split('@');\n    if (parts.length > 1 && parts[0].length > 0) {\n      return { packageName: parts[0], memberName: parts[1], from: resolve(inEngine.root, 'pacakge.json') };\n    } else {\n      return { packageName: inEngine.packageName, memberName: path, from: resolve(inEngine.root, 'pacakge.json') };\n    }\n  }\n\n  private engineConfig(packageName: string): EngineConfig | undefined {\n    return this.options.engines.find(e => e.packageName === packageName);\n  }\n\n  // This is where we figure out how all the classic treeForApp merging bottoms\n  // out.\n  @Memoize()\n  private get mergeMap(): MergeMap {\n    let result: MergeMap = new Map();\n    for (let engine of this.options.engines) {\n      let engineModules: Map<string, MergeEntry> = new Map();\n      for (let addonConfig of engine.activeAddons) {\n        let addon = this.packageCache.get(addonConfig.root);\n        if (!addon.isV2Addon()) {\n          continue;\n        }\n\n        let appJS = addon.meta['app-js'];\n        if (appJS) {\n          for (let [inEngineName, inAddonName] of Object.entries(appJS)) {\n            if (!inEngineName.startsWith('./')) {\n              throw new Error(\n                `addon ${addon.name} declares app-js in its package.json with the illegal name \"${inEngineName}\". It must start with \"./\" to make it clear that it's relative to the app`\n              );\n            }\n            if (!inAddonName.startsWith('./')) {\n              throw new Error(\n                `addon ${addon.name} declares app-js in its package.json with the illegal name \"${inAddonName}\". It must start with \"./\" to make it clear that it's relative to the addon`\n              );\n            }\n            let prevEntry = engineModules.get(inEngineName);\n            switch (prevEntry?.type) {\n              case undefined:\n                engineModules.set(inEngineName, {\n                  type: 'app-only',\n                  'app-js': {\n                    localPath: inAddonName,\n                    packageRoot: addon.root,\n                    fromPackageName: addon.name,\n                  },\n                });\n                break;\n              case 'app-only':\n              case 'both':\n                // first match wins, so this one is shadowed\n                break;\n              case 'fastboot-only':\n                engineModules.set(inEngineName, {\n                  type: 'both',\n                  'app-js': {\n                    localPath: inAddonName,\n                    packageRoot: addon.root,\n                    fromPackageName: addon.name,\n                  },\n                  'fastboot-js': prevEntry['fastboot-js'],\n                });\n                break;\n            }\n          }\n        }\n\n        let fastbootJS = addon.meta['fastboot-js'];\n        if (fastbootJS) {\n          for (let [inEngineName, inAddonName] of Object.entries(fastbootJS)) {\n            if (!inEngineName.startsWith('./')) {\n              throw new Error(\n                `addon ${addon.name} declares fastboot-js in its package.json with the illegal name \"${inEngineName}\". It must start with \"./\" to make it clear that it's relative to the app`\n              );\n            }\n            if (!inAddonName.startsWith('./')) {\n              throw new Error(\n                `addon ${addon.name} declares fastboot-js in its package.json with the illegal name \"${inAddonName}\". It must start with \"./\" to make it clear that it's relative to the addon`\n              );\n            }\n            let prevEntry = engineModules.get(inEngineName);\n            switch (prevEntry?.type) {\n              case undefined:\n                engineModules.set(inEngineName, {\n                  type: 'fastboot-only',\n                  'fastboot-js': {\n                    localPath: inAddonName,\n                    packageRoot: addon.root,\n                    fromPackageName: addon.name,\n                  },\n                });\n                break;\n              case 'fastboot-only':\n              case 'both':\n                // first match wins, so this one is shadowed\n                break;\n              case 'app-only':\n                engineModules.set(inEngineName, {\n                  type: 'both',\n                  'fastboot-js': {\n                    localPath: inAddonName,\n                    packageRoot: addon.root,\n                    fromPackageName: addon.name,\n                  },\n                  'app-js': prevEntry['app-js'],\n                });\n                break;\n            }\n          }\n        }\n      }\n      result.set(engine.root, engineModules);\n    }\n    return result;\n  }\n\n  owningEngine(pkg: Package) {\n    let owningEngine = this.options.engines.find(e =>\n      pkg.isEngine() ? e.root === pkg.root : e.activeAddons.find(a => a.root === pkg.root)\n    );\n    if (!owningEngine) {\n      throw new Error(\n        `bug in @embroider/core/src/module-resolver: cannot figure out the owning engine for ${pkg.root}`\n      );\n    }\n    return owningEngine;\n  }\n\n  private handleRewrittenPackages<R extends ModuleRequest>(request: R): R {\n    if (request.isVirtual) {\n      return request;\n    }\n    let requestingPkg = this.packageCache.ownerOfFile(request.fromFile);\n    if (!requestingPkg) {\n      return request;\n    }\n    let packageName = getPackageName(request.specifier);\n    if (!packageName) {\n      // relative request\n      return request;\n    }\n\n    let targetPkg: Package | undefined;\n    if (packageName !== requestingPkg.name) {\n      // non-relative, non-self request, so check if it aims at a rewritten addon\n      try {\n        targetPkg = this.packageCache.resolve(packageName, requestingPkg);\n      } catch (err) {\n        // this is not the place to report resolution failures. If the thing\n        // doesn't resolve, we're just not interested in redirecting it for\n        // backward-compat, that's all. The rest of the system will take care of\n        // reporting a failure to resolve (or handling it a different way)\n        if (err.code !== 'MODULE_NOT_FOUND') {\n          throw err;\n        }\n      }\n    }\n\n    let originalRequestingPkg = this.packageCache.original(requestingPkg);\n    let originalTargetPkg = targetPkg ? this.packageCache.original(targetPkg) : undefined;\n\n    if (targetPkg && originalTargetPkg !== targetPkg) {\n      // in this case it doesn't matter whether or not the requesting package\n      // was moved. RewrittenPackageCache.resolve already took care of finding\n      // the right target, and we redirect the request so it will look inside\n      // that target.\n      return logTransition('request targets a moved package', request, this.resolveWithinPackage(request, targetPkg));\n    } else if (originalRequestingPkg !== requestingPkg) {\n      // in this case, the requesting package is moved but its destination is\n      // not, so we need to rehome the request back to the original location.\n      return logTransition(\n        'outbound request from moved package',\n        request,\n        request.withMeta({ wasMovedTo: request.fromFile }).rehome(resolve(originalRequestingPkg.root, 'package.json'))\n      );\n    }\n\n    return request;\n  }\n\n  private handleRenaming<R extends ModuleRequest>(request: R): R {\n    if (request.isVirtual) {\n      return request;\n    }\n    let packageName = getPackageName(request.specifier);\n    if (!packageName) {\n      return request;\n    }\n\n    let pkg = this.packageCache.ownerOfFile(request.fromFile);\n    if (!pkg || !pkg.isV2Ember()) {\n      return request;\n    }\n\n    // real deps take precedence over renaming rules. That is, a package like\n    // ember-source might provide backburner via module renaming, but if you\n    // have an explicit dependency on backburner you should still get that real\n    // copy.\n    if (!pkg.hasDependency(packageName)) {\n      for (let [candidate, replacement] of Object.entries(this.options.renameModules)) {\n        if (candidate === request.specifier) {\n          return logTransition(`renameModules`, request, request.alias(replacement));\n        }\n        for (let extension of this.options.resolvableExtensions) {\n          if (candidate === request.specifier + '/index' + extension) {\n            return logTransition(`renameModules`, request, request.alias(replacement));\n          }\n          if (candidate === request.specifier + extension) {\n            return logTransition(`renameModules`, request, request.alias(replacement));\n          }\n        }\n      }\n\n      if (this.options.renamePackages[packageName]) {\n        return logTransition(\n          `renamePackages`,\n          request,\n          request.alias(request.specifier.replace(packageName, this.options.renamePackages[packageName]))\n        );\n      }\n    }\n\n    if (pkg.meta['auto-upgraded'] && pkg.name === packageName) {\n      // we found a self-import, resolve it for them. Only auto-upgraded\n      // packages get this help, v2 packages are natively supposed to make their\n      // own modules resolvable, and we want to push them all to do that\n      // correctly.\n      return logTransition(`v1 self-import`, request, this.resolveWithinPackage(request, pkg));\n    }\n\n    return request;\n  }\n\n  private resolveWithinPackage<R extends ModuleRequest>(request: R, pkg: Package): R {\n    if ('exports' in pkg.packageJSON) {\n      // this is the easy case -- a package that uses exports can safely resolve\n      // its own name, so it's enough to let it resolve the (self-targeting)\n      // specifier from its own package root.\n      return request.rehome(resolve(pkg.root, 'package.json'));\n    } else {\n      // otherwise we need to just assume that internal naming is simple\n      return request.alias(request.specifier.replace(pkg.name, '.')).rehome(resolve(pkg.root, 'package.json'));\n    }\n  }\n\n  private preHandleExternal<R extends ModuleRequest>(request: R): R {\n    if (request.isVirtual) {\n      return request;\n    }\n    let { specifier, fromFile } = request;\n    let pkg = this.packageCache.ownerOfFile(fromFile);\n    if (!pkg || !pkg.isV2Ember()) {\n      return request;\n    }\n\n    let packageName = getPackageName(specifier);\n    if (!packageName) {\n      // This is a relative import. We don't automatically externalize those\n      // because it's rare, and by keeping them static we give better errors. But\n      // we do allow them to be explicitly externalized by the package author (or\n      // a compat adapter). In the metadata, they would be listed in\n      // package-relative form, so we need to convert this specifier to that.\n      let absoluteSpecifier = resolve(dirname(fromFile), specifier);\n\n      if (!absoluteSpecifier.startsWith(pkg.root)) {\n        // this relative path escape its package. So it's not really using\n        // normal inter-package resolving and we should leave it alone. This\n        // case comes up especially when babel transforms are trying to insert\n        // references to runtime utilities, like we do in @embroider/macros.\n        return logTransition('beforeResolve: relative path escapes its package', request);\n      }\n\n      let packageRelativeSpecifier = explicitRelative(pkg.root, absoluteSpecifier);\n      if (isExplicitlyExternal(packageRelativeSpecifier, pkg)) {\n        let publicSpecifier = absoluteSpecifier.replace(pkg.root, pkg.name);\n        return this.external('beforeResolve', request, publicSpecifier);\n      }\n\n      // if the requesting file is in an addon's app-js, the relative request\n      // should really be understood as a request for a module in the containing\n      // engine\n      let logicalLocation = this.reverseSearchAppTree(pkg, request.fromFile);\n      if (logicalLocation) {\n        return logTransition(\n          'beforeResolve: relative import in app-js',\n          request,\n          request.rehome(resolve(logicalLocation.owningEngine.root, logicalLocation.inAppName))\n        );\n      }\n\n      return request;\n    }\n\n    // absolute package imports can also be explicitly external based on their\n    // full specifier name\n    if (isExplicitlyExternal(specifier, pkg)) {\n      return this.external('beforeResolve', request, specifier);\n    }\n\n    if (emberVirtualPackages.has(packageName) && !pkg.hasDependency(packageName)) {\n      return this.external('beforeResolve emberVirtualPackages', request, specifier);\n    }\n\n    if (emberVirtualPeerDeps.has(packageName) && !pkg.hasDependency(packageName)) {\n      // addons (whether auto-upgraded or not) may use the app's\n      // emberVirtualPeerDeps, like \"@glimmer/component\" etc.\n      if (!this.options.activeAddons[packageName]) {\n        throw new Error(`${pkg.name} is trying to import the app's ${packageName} package, but it seems to be missing`);\n      }\n      let newHome = resolve(\n        this.packageCache.maybeMoved(this.packageCache.get(this.options.appRoot)).root,\n        'package.json'\n      );\n      return logTransition(`emberVirtualPeerDeps in v2 addon`, request, request.rehome(newHome));\n    }\n\n    // if this file is part of an addon's app-js, it's really the logical\n    // package to which it belongs (normally the app) that affects some policy\n    // choices about what it can import\n    let logicalPackage = this.logicalPackage(pkg, fromFile);\n\n    if (logicalPackage.meta['auto-upgraded'] && !logicalPackage.hasDependency('ember-auto-import')) {\n      try {\n        let dep = this.packageCache.resolve(packageName, logicalPackage);\n        if (!dep.isEmberPackage()) {\n          // classic ember addons can only import non-ember dependencies if they\n          // have ember-auto-import.\n          return this.external('v1 package without auto-import', request, specifier);\n        }\n      } catch (err) {\n        if (err.code !== 'MODULE_NOT_FOUND') {\n          throw err;\n        }\n      }\n    }\n\n    // assertions on what native v2 addons can import\n    if (!pkg.meta['auto-upgraded']) {\n      if (\n        !pkg.meta['auto-upgraded'] &&\n        !appImportInAppTree(pkg, logicalPackage, packageName) &&\n        !reliablyResolvable(pkg, packageName)\n      ) {\n        throw new Error(\n          `${pkg.name} is trying to import from ${packageName} but that is not one of its explicit dependencies`\n        );\n      }\n    }\n    return request;\n  }\n\n  private external<R extends ModuleRequest>(label: string, request: R, specifier: string): R {\n    if (this.options.amdCompatibility === 'cjs') {\n      let filename = virtualExternalCJSModule(specifier);\n      return logTransition(label, request, request.virtualize(filename));\n    } else if (this.options.amdCompatibility) {\n      let entry = this.options.amdCompatibility.es.find(\n        entry => entry[0] === specifier || entry[0] + '/index' === specifier\n      );\n      if (!entry && request.specifier === 'require') {\n        entry = ['require', ['default', 'has']];\n      }\n      if (!entry) {\n        throw new Error(\n          `A module tried to resolve \"${request.specifier}\" and didn't find it (${label}).\n\n - Maybe a dependency declaration is missing? \n - Remember that v1 addons can only import non-Ember-addon NPM dependencies if they include ember-auto-import in their dependencies.\n - If this dependency is available in the AMD loader (because someone manually called \"define()\" for it), you can configure a shim like:\n\n  amdCompatibility: {\n    es: [\n      [\"${request.specifier}\", [\"default\", \"yourNamedExportsGoHere\"]],\n    ]\n  }\n\n`\n        );\n      }\n      let filename = virtualExternalESModule(specifier, entry[1]);\n      return logTransition(label, request, request.virtualize(filename));\n    } else {\n      throw new Error(\n        `Embroider's amdCompatibility option is disabled, but something tried to use it to access \"${request.specifier}\"`\n      );\n    }\n  }\n\n  fallbackResolve<R extends ModuleRequest>(request: R): R {\n    let { specifier, fromFile } = request;\n\n    if (compatPattern.test(specifier)) {\n      // Some kinds of compat requests get rewritten into other things\n      // deterministically. For example, \"#embroider_compat/helpers/whatever\"\n      // means only \"the-current-engine/helpers/whatever\", and if that doesn't\n      // actually exist it's that path that will show up as a missing import.\n      //\n      // But others have an ambiguous meaning. For example,\n      // #embroider_compat/components/whatever can mean several different\n      // things. If we're unable to find any of them, the actual\n      // \"#embroider_compat\" request will fall through all the way to here.\n      //\n      // In that case, we don't want to externalize that failure. We know it's\n      // not a classic runtime thing. It's better to let it be a build error\n      // here.\n      return request;\n    }\n\n    let pkg = this.packageCache.ownerOfFile(fromFile);\n    if (!pkg) {\n      return logTransition('no identifiable owningPackage', request);\n    }\n\n    // if we rehomed this request to its un-rewritten location in order to try\n    // to do the defaultResolve from there, now we refer back to the rewritten\n    // location because that's what we want to use when asking things like\n    // isV2Ember()\n    let movedPkg = this.packageCache.maybeMoved(pkg);\n    if (movedPkg !== pkg) {\n      if (!request.meta?.wasMovedTo) {\n        throw new Error(`bug: embroider resolver's meta is not propagating`);\n      }\n      fromFile = request.meta.wasMovedTo as string;\n      pkg = movedPkg;\n    }\n\n    if (!pkg.isV2Ember()) {\n      return logTransition('fallbackResolve: not in an ember package', request);\n    }\n\n    let packageName = getPackageName(specifier);\n    if (!packageName) {\n      // this is a relative import\n\n      let withinEngine = this.engineConfig(pkg.name);\n      if (withinEngine) {\n        // it's a relative import inside an engine (which also means app), which\n        // means we may need to satisfy the request via app tree merging.\n        let appJSMatch = this.searchAppTree(\n          request,\n          withinEngine,\n          explicitRelative(pkg.root, resolve(dirname(fromFile), specifier))\n        );\n        if (appJSMatch) {\n          return logTransition('fallbackResolve: relative appJsMatch', request, appJSMatch);\n        } else {\n          return logTransition('fallbackResolve: relative appJs search failure', request);\n        }\n      } else {\n        // nothing else to do for relative imports\n        return logTransition('fallbackResolve: relative failure', request);\n      }\n    }\n\n    // auto-upgraded packages can fall back to the set of known active addons\n    //\n    // v2 packages can fall back to the set of known active addons only to find\n    // themselves (which is needed due to app tree merging)\n    if ((pkg.meta['auto-upgraded'] || packageName === pkg.name) && this.options.activeAddons[packageName]) {\n      return logTransition(\n        `activeAddons`,\n        request,\n        this.resolveWithinPackage(request, this.packageCache.get(this.options.activeAddons[packageName]))\n      );\n    }\n\n    let logicalLocation = this.reverseSearchAppTree(pkg, fromFile);\n    if (logicalLocation) {\n      // the requesting file is in an addon's appTree. We didn't succeed in\n      // resolving this (non-relative) request from inside the actual addon, so\n      // next try to resolve it from the corresponding logical location in the\n      // app.\n      return logTransition(\n        'fallbackResolve: retry from logical home of app-js file',\n        request,\n        request.rehome(resolve(logicalLocation.owningEngine.root, logicalLocation.inAppName))\n      );\n    }\n\n    let targetingEngine = this.engineConfig(packageName);\n    if (targetingEngine) {\n      let appJSMatch = this.searchAppTree(request, targetingEngine, specifier.replace(packageName, '.'));\n      if (appJSMatch) {\n        return logTransition('fallbackResolve: non-relative appJsMatch', request, appJSMatch);\n      }\n    }\n\n    if (pkg.meta['auto-upgraded']) {\n      // auto-upgraded packages can fall back to attempting to find dependencies at\n      // runtime. Native v2 packages can only get this behavior in the\n      // isExplicitlyExternal case above because they need to explicitly ask for\n      // externals.\n      return this.external('v1 catch-all fallback', request, specifier);\n    } else {\n      // native v2 packages don't automatically externalize *everything* the way\n      // auto-upgraded packages do, but they still externalize known and approved\n      // ember virtual packages (like @ember/component)\n      if (emberVirtualPackages.has(packageName)) {\n        return this.external('emberVirtualPackages', request, specifier);\n      }\n    }\n\n    // this is falling through with the original specifier which was\n    // non-resolvable, which will presumably cause a static build error in stage3.\n    return logTransition('fallbackResolve final exit', request);\n  }\n\n  private getEntryFromMergeMap(\n    inEngineSpecifier: string,\n    root: string\n  ): { entry: MergeEntry; matched: string } | undefined {\n    let entry: MergeEntry | undefined;\n    for (let candidate of this.withResolvableExtensions(inEngineSpecifier)) {\n      entry = this.mergeMap.get(root)?.get(candidate);\n      if (entry) {\n        return { entry, matched: candidate };\n      }\n    }\n  }\n\n  private *withResolvableExtensions(filename: string): Generator<string, void, void> {\n    if (filename.match(/\\.(hbs|js|hbs\\.js)$/)) {\n      yield filename;\n    } else {\n      for (let ext of ['.hbs', '.js', '.hbs.js']) {\n        yield `${filename}${ext}`;\n      }\n    }\n  }\n\n  private searchAppTree<R extends ModuleRequest>(\n    request: R,\n    engine: EngineConfig,\n    inEngineSpecifier: string\n  ): R | undefined {\n    let matched = this.getEntryFromMergeMap(inEngineSpecifier, engine.root);\n\n    switch (matched?.entry.type) {\n      case undefined:\n        return undefined;\n      case 'app-only':\n        return request\n          .alias(matched.entry['app-js'].localPath)\n          .rehome(resolve(matched.entry['app-js'].packageRoot, 'package.json'));\n      case 'fastboot-only':\n        return request\n          .alias(matched.entry['fastboot-js'].localPath)\n          .rehome(resolve(matched.entry['fastboot-js'].packageRoot, 'package.json'));\n      case 'both':\n        let foundAppJS = this.nodeResolve(\n          matched.entry['app-js'].localPath,\n          resolve(matched.entry['app-js'].packageRoot, 'package.json')\n        );\n        if (foundAppJS.type !== 'real') {\n          throw new Error(\n            `${matched.entry['app-js'].fromPackageName} declared ${inEngineSpecifier} in packageJSON.ember-addon.app-js, but that module does not exist`\n          );\n        }\n        let { names } = describeExports(readFileSync(foundAppJS.filename, 'utf8'), {});\n        return request.virtualize(fastbootSwitch(matched.matched, resolve(engine.root, 'package.json'), names));\n    }\n  }\n\n  // check whether the given file with the given owningPackage is an addon's\n  // appTree, and if so return the notional location within the app (or owning\n  // engine) that it \"logically\" lives at.\n  private reverseSearchAppTree(\n    owningPackage: Package,\n    fromFile: string\n  ): { owningEngine: EngineConfig; inAppName: string } | undefined {\n    // if the requesting file is in an addon's app-js, the request should\n    // really be understood as a request for a module in the containing engine\n    if (owningPackage.isV2Addon()) {\n      let sections = [owningPackage.meta['app-js'], owningPackage.meta['fastboot-js']];\n      for (let section of sections) {\n        if (section) {\n          let fromPackageRelativePath = explicitRelative(owningPackage.root, fromFile);\n          for (let [inAppName, inAddonName] of Object.entries(section)) {\n            if (inAddonName === fromPackageRelativePath) {\n              return { owningEngine: this.owningEngine(owningPackage), inAppName };\n            }\n          }\n        }\n      }\n    }\n  }\n\n  // check if this file is resolvable as a global component, and if so return\n  // its dasherized name\n  reverseComponentLookup(filename: string): string | undefined {\n    const owningPackage = this.packageCache.ownerOfFile(filename);\n    if (!owningPackage?.isV2Ember()) {\n      return;\n    }\n    let engineConfig = this.options.engines.find(e => e.root === owningPackage.root);\n    if (engineConfig) {\n      // we're directly inside an engine, so we're potentially resolvable as a\n      // global component\n\n      // this kind of mapping is not true in general for all packages, but it\n      // *is* true for all classical engines (which includes apps) since they\n      // don't support package.json `exports`. As for a future v2 engine or app:\n      // this whole method is only relevant for implementing packageRules, which\n      // should only be for classic stuff. v2 packages should do the right\n      // things from the beginning and not need packageRules about themselves.\n      let inAppName = explicitRelative(engineConfig.root, filename);\n\n      return this.tryReverseComponent(engineConfig.packageName, inAppName);\n    }\n\n    let engineInfo = this.reverseSearchAppTree(owningPackage, filename);\n    if (engineInfo) {\n      // we're in some addon's app tree, so we're potentially resolvable as a\n      // global component\n      return this.tryReverseComponent(engineInfo.owningEngine.packageName, engineInfo.inAppName);\n    }\n  }\n\n  private tryReverseComponent(inEngineName: string, relativePath: string): string | undefined {\n    let extensionless = relativePath.replace(extensionsPattern(this.options.resolvableExtensions), '');\n    let candidates = [...this.componentJSCandidates(inEngineName), ...this.componentTemplateCandidates(inEngineName)];\n    for (let candidate of candidates) {\n      if (extensionless.startsWith(`.${candidate.prefix}`) && extensionless.endsWith(candidate.suffix)) {\n        return extensionless.slice(candidate.prefix.length + 1, extensionless.length - candidate.suffix.length);\n      }\n    }\n    return undefined;\n  }\n}\n\nfunction isExplicitlyExternal(specifier: string, fromPkg: V2Package): boolean {\n  return Boolean(fromPkg.isV2Addon() && fromPkg.meta['externals'] && fromPkg.meta['externals'].includes(specifier));\n}\n\n// we don't want to allow things that resolve only by accident that are likely\n// to break in other setups. For example: import your dependencies'\n// dependencies, or importing your own name from within a monorepo (which will\n// work because of the symlinking) without setting up \"exports\" (which makes\n// your own name reliably resolvable)\nfunction reliablyResolvable(pkg: V2Package, packageName: string) {\n  if (pkg.hasDependency(packageName)) {\n    return true;\n  }\n\n  if (pkg.name === packageName && pkg.packageJSON.exports) {\n    return true;\n  }\n\n  if (emberVirtualPeerDeps.has(packageName) || emberVirtualPackages.has(packageName)) {\n    return true;\n  }\n\n  return false;\n}\n\n//\nfunction appImportInAppTree(inPackage: Package, inLogicalPackage: Package, importedPackageName: string): boolean {\n  return inPackage !== inLogicalPackage && importedPackageName === inLogicalPackage.name;\n}\n"]}