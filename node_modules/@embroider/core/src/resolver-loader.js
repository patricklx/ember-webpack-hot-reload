"use strict";
var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {
    if (kind === "m") throw new TypeError("Private method is not writable");
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
    return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
};
var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var _ResolverLoader_resolver, _ResolverLoader_configFile, _ResolverLoader_watcher;
Object.defineProperty(exports, "__esModule", { value: true });
exports.ResolverLoader = void 0;
const fs_extra_1 = require("fs-extra");
const module_resolver_1 = require("./module-resolver");
const shared_internals_1 = require("@embroider/shared-internals");
const path_1 = require("path");
const fs_1 = require("fs");
class ResolverLoader {
    constructor(appRoot, watch = false) {
        this.appRoot = appRoot;
        _ResolverLoader_resolver.set(this, void 0);
        _ResolverLoader_configFile.set(this, void 0);
        _ResolverLoader_watcher.set(this, void 0);
        __classPrivateFieldSet(this, _ResolverLoader_configFile, (0, path_1.join)((0, shared_internals_1.locateEmbroiderWorkingDir)(this.appRoot), 'resolver.json'), "f");
        if (watch) {
            __classPrivateFieldSet(this, _ResolverLoader_watcher, (0, fs_1.watch)(__classPrivateFieldGet(this, _ResolverLoader_configFile, "f"), { persistent: false }, () => {
                __classPrivateFieldSet(this, _ResolverLoader_resolver, undefined, "f");
            }), "f");
        }
    }
    close() {
        var _a;
        (_a = __classPrivateFieldGet(this, _ResolverLoader_watcher, "f")) === null || _a === void 0 ? void 0 : _a.close();
    }
    get resolver() {
        if (!__classPrivateFieldGet(this, _ResolverLoader_resolver, "f")) {
            let config = (0, fs_extra_1.readJSONSync)((0, path_1.join)((0, shared_internals_1.locateEmbroiderWorkingDir)(this.appRoot), 'resolver.json'));
            __classPrivateFieldSet(this, _ResolverLoader_resolver, new module_resolver_1.Resolver(config), "f");
        }
        return __classPrivateFieldGet(this, _ResolverLoader_resolver, "f");
    }
}
exports.ResolverLoader = ResolverLoader;
_ResolverLoader_resolver = new WeakMap(), _ResolverLoader_configFile = new WeakMap(), _ResolverLoader_watcher = new WeakMap();
//# sourceMappingURL=resolver-loader.js.map