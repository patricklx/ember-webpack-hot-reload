{"version":3,"file":"portable.js","sourceRoot":"","sources":["portable.ts"],"names":[],"mappings":"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","sourcesContent":["import mapValues from 'lodash/mapValues';\nimport assertNever from 'assert-never';\nimport { Memoize } from 'typescript-memoize';\nimport resolvePackagePath from 'resolve-package-path';\n\nexport const protocol = '__embroider_portable_values__';\nconst { globalValues, nonce } = setupGlobals();\n\nexport interface PortableResult {\n  value: any;\n  isParallelSafe: boolean;\n  needsHydrate: boolean;\n}\n\nexport interface PortableHint {\n  requireFile: string;\n  packageVersion: string | undefined;\n  useMethod?: string;\n}\n\nconst { findUpPackagePath } = resolvePackagePath;\n\nexport function maybeNodeModuleVersion(path: string) {\n  const packagePath = findUpPackagePath(path);\n\n  if (packagePath === null) {\n    throw new Error(`Could not find package.json for '${path}'`);\n  } else {\n    return require(packagePath).version; // eslint-disable-line @typescript-eslint/no-require-imports\n  }\n}\n\nexport class Portable {\n  constructor(\n    private opts: {\n      dehydrate?: (value: any, accessPath: string[]) => PortableResult | undefined;\n      hydrate?: (value: any, accessPath: string[]) => { value: any } | undefined;\n      hints?: PortableHint[];\n    } = {}\n  ) {}\n\n  dehydrate(value: any, accessPath: string[] = []): PortableResult {\n    if (this.opts.dehydrate) {\n      let result = this.opts.dehydrate.call(this, value, accessPath);\n      if (result) {\n        return result;\n      }\n    }\n\n    if (value === null) {\n      return { value, isParallelSafe: true, needsHydrate: false };\n    }\n\n    let broccoli = maybeBroccoli(value);\n    if (broccoli) {\n      return { value: broccoli, isParallelSafe: true, needsHydrate: true };\n    }\n\n    let htmlbars = maybeHTMLBars(value);\n    if (htmlbars) {\n      return { value: htmlbars, isParallelSafe: true, needsHydrate: true };\n    }\n\n    if (Array.isArray(value)) {\n      let results = value.map((element, index) => this.dehydrate(element, accessPath.concat(String(index))));\n      return {\n        value: results.map(r => r.value),\n        isParallelSafe: results.every(r => r.isParallelSafe),\n        needsHydrate: results.some(r => r.needsHydrate),\n      };\n    }\n\n    switch (typeof value) {\n      case 'string':\n      case 'number':\n      case 'boolean':\n      case 'undefined':\n        return { value, isParallelSafe: true, needsHydrate: false };\n      case 'object':\n        if (Object.getPrototypeOf(value) === Object.prototype) {\n          let isParallelSafe = true;\n          let needsHydrate = false;\n          let result = mapValues(value, (propertyValue, key) => {\n            let result = this.dehydrate(propertyValue, accessPath.concat(key));\n            isParallelSafe = isParallelSafe && result.isParallelSafe;\n            needsHydrate = needsHydrate || result.needsHydrate;\n            return result.value;\n          });\n          return { value: result, isParallelSafe, needsHydrate };\n        }\n    }\n\n    let found = this.foundHints.get(value);\n    if (found) {\n      return {\n        value: {\n          embroiderPlaceholder: true,\n          type: 'broccoli-parallel',\n          requireFile: found.requireFile,\n          packageVersion: maybeNodeModuleVersion(found.requireFile),\n          useMethod: found.useMethod,\n        },\n        isParallelSafe: true,\n        needsHydrate: true,\n      };\n    }\n\n    return globalPlaceholder(value);\n  }\n\n  hydrate(input: any, accessPath: string[] = []): any {\n    if (this.opts.hydrate) {\n      let result = this.opts.hydrate.call(this, input, accessPath);\n      if (result) {\n        return result;\n      }\n    }\n    if (Array.isArray(input)) {\n      return input.map((element, index) => this.hydrate(element, accessPath.concat(String(index))));\n    }\n    if (input && typeof input === 'object') {\n      if (input.embroiderPlaceholder) {\n        let placeholder = input as Placeholder;\n        switch (placeholder.type) {\n          case 'global':\n            if (placeholder.nonce !== nonce) {\n              throw new Error(`unable to use this non-serializable babel config in this node process`);\n            }\n            return globalValues[placeholder.index];\n          case 'broccoli-parallel':\n            return buildBroccoli(placeholder);\n          case 'htmlbars-parallel':\n            return buildHTMLBars(placeholder);\n          default:\n            assertNever(placeholder);\n        }\n      } else {\n        return mapValues(input, (value, key) => this.hydrate(value, accessPath.concat(key)));\n      }\n    }\n    return input;\n  }\n\n  @Memoize()\n  get foundHints(): Map<any, PortableHint> {\n    let found = new Map();\n    if (this.opts.hints) {\n      for (let hint of this.opts.hints) {\n        // eslint-disable-next-line @typescript-eslint/no-require-imports\n        let mod = require(hint.requireFile);\n        if (hint.useMethod) {\n          mod = mod[hint.useMethod];\n        }\n        found.set(mod, hint);\n      }\n    }\n    return found;\n  }\n}\n\ninterface GlobalPlaceholder {\n  embroiderPlaceholder: true;\n  type: 'global';\n  nonce: number;\n  index: number;\n}\n\ninterface BroccoliParallelPlaceholder {\n  embroiderPlaceholder: true;\n  type: 'broccoli-parallel';\n  requireFile: string;\n  packageVersion: string | undefined;\n  useMethod: string | undefined;\n  buildUsing: string | undefined;\n  params: any;\n}\n\ninterface HTMLBarsParallelPlaceholder {\n  embroiderPlaceholder: true;\n  type: 'htmlbars-parallel';\n  packageVersion: string | undefined;\n  requireFile: string;\n  buildUsing: string;\n  params: any;\n}\n\ntype Placeholder = GlobalPlaceholder | BroccoliParallelPlaceholder | HTMLBarsParallelPlaceholder;\n\nfunction setupGlobals() {\n  let G = global as any as { [protocol]: { globalValues: any[]; nonce: number } };\n  if (!G[protocol]) {\n    G[protocol] = { globalValues: [], nonce: Math.floor(Math.random() * Math.pow(2, 32)) };\n  }\n  return G[protocol];\n}\n\n// === broccoli-babel-transpiler support ===\n\nfunction maybeBroccoli(object: any): BroccoliParallelPlaceholder | undefined {\n  const type = typeof object;\n  const hasProperties = type === 'function' || (type === 'object' && object !== null);\n\n  if (\n    hasProperties &&\n    object._parallelBabel !== null &&\n    typeof object._parallelBabel === 'object' &&\n    typeof object._parallelBabel.requireFile === 'string'\n  ) {\n    return {\n      embroiderPlaceholder: true,\n      type: 'broccoli-parallel',\n      requireFile: object._parallelBabel.requireFile,\n      packageVersion: maybeNodeModuleVersion(object._parallelBabel.requireFile),\n      buildUsing: object._parallelBabel.buildUsing,\n      useMethod: object._parallelBabel.useMethod,\n      params: object._parallelBabel.params,\n    };\n  }\n}\n\nfunction buildBroccoli(parallelApiInfo: BroccoliParallelPlaceholder) {\n  // eslint-disable-next-line @typescript-eslint/no-require-imports\n  let requiredStuff = require(parallelApiInfo.requireFile);\n\n  if (parallelApiInfo.useMethod) {\n    if (requiredStuff[parallelApiInfo.useMethod] === undefined) {\n      throw new Error(\n        \"method '\" + parallelApiInfo.useMethod + \"' does not exist in file \" + parallelApiInfo.requireFile\n      );\n    }\n    return requiredStuff[parallelApiInfo.useMethod];\n  }\n\n  if (parallelApiInfo.buildUsing) {\n    if (typeof requiredStuff[parallelApiInfo.buildUsing] !== 'function') {\n      throw new Error(\"'\" + parallelApiInfo.buildUsing + \"' is not a function in file \" + parallelApiInfo.requireFile);\n    }\n    return requiredStuff[parallelApiInfo.buildUsing](parallelApiInfo.params);\n  }\n\n  return requiredStuff;\n}\n\n// ember-cli-htmlbars-inline-precompile support ===\nfunction maybeHTMLBars(object: any): HTMLBarsParallelPlaceholder | undefined {\n  const type = typeof object;\n  const hasProperties = type === 'function' || (type === 'object' && object !== null);\n\n  if (\n    hasProperties &&\n    object.parallelBabel !== null &&\n    typeof object.parallelBabel === 'object' &&\n    typeof object.parallelBabel.requireFile === 'string'\n  ) {\n    return {\n      embroiderPlaceholder: true,\n      type: 'htmlbars-parallel',\n      requireFile: object.parallelBabel.requireFile,\n      packageVersion: maybeNodeModuleVersion(object.parallelBabel.requireFile),\n      buildUsing: String(object.parallelBabel.buildUsing),\n      params: object.parallelBabel.params,\n    };\n  }\n}\n\nfunction buildHTMLBars(parallelApiInfo: HTMLBarsParallelPlaceholder) {\n  // eslint-disable-next-line @typescript-eslint/no-require-imports\n  let requiredStuff = require(parallelApiInfo.requireFile);\n  if (typeof requiredStuff[parallelApiInfo.buildUsing] !== 'function') {\n    throw new Error(\"'\" + parallelApiInfo.buildUsing + \"' is not a function in file \" + parallelApiInfo.requireFile);\n  }\n  return requiredStuff[parallelApiInfo.buildUsing](parallelApiInfo.params);\n}\n\nfunction globalPlaceholder(value: any): { value: GlobalPlaceholder; isParallelSafe: false; needsHydrate: true } {\n  let index = globalValues.length;\n  globalValues.push(value);\n  return {\n    value: {\n      embroiderPlaceholder: true,\n      type: 'global',\n      nonce,\n      index,\n    },\n    isParallelSafe: false,\n    needsHydrate: true,\n  };\n}\n"]}