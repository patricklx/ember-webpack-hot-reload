{"version":3,"file":"asset.js","sourceRoot":"","sources":["asset.ts"],"names":[],"mappings":"","sourcesContent":["import type { JSDOM } from 'jsdom';\nimport type { EmberHTML } from './ember-html';\n\nexport interface ImplicitAssetPaths {\n  'implicit-scripts': string[];\n  'implicit-test-scripts': string[];\n  'implicit-styles': string[];\n  'implicit-test-styles': string[];\n}\n\ninterface BaseAsset {\n  // where this asset should be placed, relative to the app's root\n  relativePath: string;\n}\n\nexport interface OnDiskAsset extends BaseAsset {\n  kind: 'on-disk';\n\n  // absolute path to where we will find it\n  sourcePath: string;\n  mtime: number;\n  size: number;\n}\n\nexport interface InMemoryAsset extends BaseAsset {\n  kind: 'in-memory';\n\n  // the actual bits\n  source: string | Buffer;\n}\n\n// This represents an HTML entrypoint to the Ember app\nexport interface EmberAsset extends BaseAsset {\n  kind: 'ember';\n\n  // absolute path to where we will find the html file\n  sourcePath: string;\n\n  // these describe the file at sourcePath so we can avoid rebuilding when it\n  // hasn't changed\n  mtime: number;\n  size: number;\n\n  // whether we should include the test suite (in addition to the ember app)\n  includeTests: boolean;\n\n  // the rootURL at which this Ember app expects to be hosted.\n  rootURL: string;\n\n  // This will receive the parsed document. It may optionally modify the\n  // document. And it must return a description of the locations where we're\n  // supposed to insert the parts of the Ember app.\n  prepare(dom: JSDOM): EmberHTML;\n}\n\nexport type Asset = OnDiskAsset | InMemoryAsset | EmberAsset;\n"]}