{"version":3,"file":"app-files.js","sourceRoot":"","sources":["app-files.ts"],"names":[],"mappings":"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","sourcesContent":["import { sep } from 'path';\nimport type { Package, AddonPackage } from '@embroider/shared-internals';\n\nexport interface RouteFiles {\n  route?: string;\n  template?: string;\n  controller?: string;\n  children: Map<string, RouteFiles>;\n}\n\nexport class AppFiles {\n  readonly tests: ReadonlyArray<string>;\n  readonly components: ReadonlyArray<string>;\n  readonly helpers: ReadonlyArray<string>;\n  readonly modifiers: ReadonlyArray<string>;\n  private perRoute: RouteFiles;\n  readonly otherAppFiles: ReadonlyArray<string>;\n  readonly isFastbootOnly: Map<string, boolean>;\n  readonly fastbootFiles: { [appName: string]: { localFilename: string; shadowedFilename: string | undefined } };\n\n  constructor(\n    readonly engine: Engine,\n    appFiles: Set<string>,\n    fastbootFiles: Set<string>,\n    resolvableExtensions: RegExp,\n    podModulePrefix?: string\n  ) {\n    let tests: string[] = [];\n    let components: string[] = [];\n    let helpers: string[] = [];\n    let modifiers: string[] = [];\n    let otherAppFiles: string[] = [];\n    this.perRoute = { children: new Map() };\n\n    let combinedFiles = new Set<string>();\n    let combinedNonFastbootFiles = new Set<string>();\n    let isFastbootOnly = new Map<string, boolean>();\n\n    for (let f of appFiles) {\n      combinedFiles.add(f);\n      combinedNonFastbootFiles.add(f);\n    }\n    for (let f of fastbootFiles) {\n      combinedFiles.add(f);\n    }\n\n    for (let addon of engine.addons) {\n      let appJS = addon.meta['app-js'];\n      if (appJS) {\n        for (let filename of Object.keys(appJS)) {\n          filename = filename.replace(/^\\.\\//, '');\n          combinedFiles.add(filename);\n          combinedNonFastbootFiles.add(filename);\n        }\n      }\n\n      let fastbootJS = addon.meta['fastboot-js'];\n      if (fastbootJS) {\n        for (let filename of Object.keys(fastbootJS)) {\n          filename = filename.replace(/^\\.\\//, '');\n          combinedFiles.add(filename);\n        }\n      }\n    }\n\n    for (let relativePath of combinedFiles) {\n      isFastbootOnly.set(relativePath, !combinedNonFastbootFiles.has(relativePath));\n      relativePath = relativePath.split(sep).join('/');\n      if (!resolvableExtensions.test(relativePath)) {\n        continue;\n      }\n\n      if (/\\.d\\.ts$/.test(relativePath)) {\n        // .d.ts files are technically \"*.ts\" files but aren't really and we\n        // don't want to include them when we crawl through the app.\n        continue;\n      }\n\n      if (relativePath.startsWith('tests/')) {\n        tests.push(relativePath);\n        continue;\n      }\n\n      if (relativePath.startsWith('components/')) {\n        // hbs files are resolvable, but not when they're used via co-location.\n        // An hbs file is used via colocation when it's inside the components\n        // directory, and also not named \"template.hbs\" (because that is an\n        // older pattern used with pods-like layouts).\n        if (!relativePath.endsWith('.hbs') || relativePath.endsWith('/template.hbs')) {\n          components.push(relativePath);\n        }\n        continue;\n      }\n\n      if (relativePath.startsWith('templates/components/')) {\n        components.push(relativePath);\n        continue;\n      }\n\n      if (relativePath.startsWith('helpers/')) {\n        helpers.push(relativePath);\n        continue;\n      }\n\n      if (relativePath.startsWith('modifiers/')) {\n        modifiers.push(relativePath);\n        continue;\n      }\n\n      if (\n        (podModulePrefix !== undefined && this.handlePodsRouteFile(relativePath, podModulePrefix)) ||\n        this.handleClassicRouteFile(relativePath)\n      ) {\n        continue;\n      }\n\n      otherAppFiles.push(relativePath);\n    }\n    this.tests = tests;\n    this.components = components;\n    this.helpers = helpers;\n    this.modifiers = modifiers;\n    this.otherAppFiles = otherAppFiles;\n    this.isFastbootOnly = isFastbootOnly;\n\n    // this deliberately only describes the app's fastboot files. Not the full\n    // merge from all the addons. This is because they need different handling\n    // in the module resolver -- addon fastboot files can always be a\n    // fallbackResolve, because if the app happens to define the same name\n    // (whether fastboot-specific or just browser) that wins over the addon.\n    // Whereas if the app itself defines a fastbot-specific version of a file,\n    // that must take precedence over the *normal* resolution, and must be\n    // implemented in beforeResolve.\n    this.fastbootFiles = Object.fromEntries(\n      [...fastbootFiles].map(name => [\n        `./${name}`,\n        {\n          localFilename: `./_fastboot_/${name}`,\n          shadowedFilename: appFiles.has(name) ? `./${name}` : undefined,\n        },\n      ])\n    );\n  }\n\n  private handleClassicRouteFile(relativePath: string): boolean {\n    let [prefix, ...rest] = relativePath.replace(/\\.\\w{1,3}$/, '').split('/');\n    if (!['controllers', 'templates', 'routes'].includes(prefix)) {\n      return false;\n    }\n    let type = prefix.slice(0, -1) as 'controller' | 'template' | 'route';\n    let cursor = this.perRoute;\n    for (let part of rest) {\n      let child = cursor.children.get(part);\n      if (child) {\n        cursor = child;\n      } else {\n        let newEntry = { children: new Map() };\n        cursor.children.set(part, newEntry);\n        cursor = newEntry;\n      }\n    }\n    cursor[type] = relativePath;\n    return true;\n  }\n\n  private handlePodsRouteFile(relativePath: string, podModulePrefix: string): boolean {\n    let parts = relativePath.replace(/\\.\\w{1,3}$/, '').split('/');\n    let type = parts.pop();\n    if (!type || !['controller', 'template', 'route'].includes(type)) {\n      return false;\n    }\n    let podParts = podModulePrefix.split('/');\n    // The first part of podModulePrefix is the app's package name\n    podParts.shift();\n\n    for (let podPart of podParts) {\n      if (parts.shift() !== podPart) {\n        return false;\n      }\n    }\n\n    let cursor = this.perRoute;\n    for (let part of parts) {\n      let child = cursor.children.get(part);\n      if (child) {\n        cursor = child;\n      } else {\n        let newEntry = { children: new Map() };\n        cursor.children.set(part, newEntry);\n        cursor = newEntry;\n      }\n    }\n    cursor[type as 'controller' | 'template' | 'route'] = relativePath;\n    return true;\n  }\n\n  get routeFiles(): Readonly<RouteFiles> {\n    return this.perRoute;\n  }\n}\n\nexport interface Engine {\n  // the engine's own package\n  package: Package;\n  // the set of active addons in the engine\n  addons: Set<AddonPackage>;\n  // the parent engine, if any\n  parent: Engine | undefined;\n  // where the engine's own V2 code comes from\n  sourcePath: string;\n  // runtime name for the engine's own module namespace\n  modulePrefix: string;\n  // this is destPath but relative to the app itself\n  appRelativePath: string;\n}\n"]}