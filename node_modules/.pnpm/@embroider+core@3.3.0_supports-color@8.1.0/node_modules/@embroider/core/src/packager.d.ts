import type { AppMeta } from '@embroider/shared-internals';
export interface Variant {
    name: string;
    runtime: 'all' | 'browser' | 'fastboot';
    optimizeForProduction: boolean;
}
export interface PackagerConstructor<Options> {
    new (inputPath: string, outputPath: string, variants: Variant[], consoleWrite: (message: string) => void, options?: Options): Packager;
    annotation: string;
}
export interface Packager {
    build(): Promise<void>;
}
export declare function applyVariantToBabelConfig(variant: Variant, babelConfig: any): any;
/**
 * Get the app meta-data for a package
 */
export declare function getAppMeta(pathToVanillaApp: string): {
    name: string;
    'ember-addon': AppMeta;
};
/**
 * Get the path to a cache directory in the recommended location
 *
 * This ensures they have exactly the same lifetime as some of embroider's own caches.
 */
export declare function getPackagerCacheDir(name: string): string;
